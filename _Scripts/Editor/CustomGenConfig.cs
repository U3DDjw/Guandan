/*
 * Tencent is pleased to support the open source community by making xLua available.
 * Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
*/

using System.Collections.Generic;
using System;
using UnityEngine;
using XLua;
using System.Reflection;
using System.Linq;
//配置的详细介绍请看Doc下《XLua的配置.doc》
public static class CustomGenConfig
{
    [Hotfix]
    public static List<Type> by_property = new List<Type>() //可以热更的文件
    {
          typeof(AppFouse),
          typeof(Game),
          typeof(SDKManager),
          typeof(SDKManager),
          typeof(DataManager),
          typeof(GameManager),
          typeof(PlayerInfo),
          typeof(PlayingGameInfo),
          typeof(RoomInfo),
          typeof(SelfCardsManager),
          typeof(BaseModule),
          typeof(HomeModule),
          typeof(LoadingModule),
          typeof(LoginModule),
          typeof(PlayingModule),
          typeof(ResourceManager),
          typeof(AudioManager),
          typeof(ButtonScript),
          typeof(EmailManager),
          typeof(RecordManager),
          typeof(TweenManager),
          typeof(XPlayerPrefs),
          //Tween
          typeof(BintingEmoticonTween),
          typeof(HorseController),
          typeof(ShunziTween),
          typeof(UIAirPlaneTween),
          typeof(UIEmailTween),
          typeof(UIPlayingCardTween),
          typeof(ViewTween),
          typeof(WinStarTween),
          typeof(UITaskView),
          typeof(UIHomeViewTaskBtn),
          //View
          typeof(ClockRun),
          typeof(LoadTransitionContext),
          typeof(LoginSceneController),
          typeof(MainLoadContext),
          typeof(RecordBureauView),
          typeof(UIRecordItem),
          typeof(RoomNumberItem),
          typeof(SelectOne),
          typeof(ShopCheckItem),
          typeof(SingleCard),
          typeof(SingleCardDragDrop),
          typeof(SwitchBtnFunction),
          typeof(UIBindPhoneView),
          typeof(UIBureauOverItem),
          typeof(UIBureauOverView),
          typeof(UIBuyCoinView),
          typeof(UIChatMessagTipView),
          typeof(UICommonView),
          typeof(UICreateRoomView),
          typeof(UIDifferentCardType),
          typeof(UIDragDropArrow),
          typeof(UIEditPlayerInfoView),
          typeof(UIEmailItem),
          typeof(UIEmailView),
          typeof(UIEmoticonView),
          typeof(UIGameInfoView),
          typeof(UIHomeView),
          typeof(UIHomeViewDatingNoticView),
          typeof(UIInviteView),
          typeof(UIJoinRoomView),
          typeof(UILoadNextSceneView),
          typeof(UILoginView),
          typeof(UINoticeView),
          typeof(UIPlayingGameView),
          typeof(UIRecordView),
          typeof(UIRoomcardView),
          typeof(UIRuleView),
          typeof(UISameIpItem),
          typeof(UISameIpView),
          typeof(UISettingView),
          typeof(UIShopItem),
          typeof(UIShopView),
          typeof(UITipsView),
          typeof(UIToolsView),
          typeof(UITotalBureauOverItem),
          typeof(UITotalBureauOverView),
          typeof(UIVoiceView),
          typeof(UIVoteDismissItem),
          typeof(UIVoteDismissView),
          typeof(UIWaitGameView),
          typeof(UIHomeViewTaskBtn),
          typeof(HaoyunFramework.UIManagers),
          typeof(HaoyunFramework.ContextManager),
          typeof(UIPlayBackView),
          typeof(UIRecordLookOtherBackView),
          typeof(UIRecordItemDetail),

          typeof(UIGoldFiledView),
          typeof(UIGoldNotEnoughView),
          typeof(UIGoldPlayingGameView),
          typeof(UIGoldPlayingInfoView),
          typeof(UIGoldPlayingPlayerView), 
          typeof(UIGoldPlayingSelfView),
          typeof(UIGoldPlayingStatusView),
          typeof(UICheckCardIdView),
          typeof(GoldFiledManager),
    };
    //lua中要使用到C#库的配置，比如C#标准库，或者Unity API，第三方库等。(静态列表，)
    [LuaCallCSharp]
    public static List<Type> LuaCallCSharp = new List<Type>() {
                //System
                typeof(System.Object),
                typeof(UnityEngine.Object),
                typeof(Vector2),
                typeof(Vector3),
                typeof(Vector4),
                typeof(Quaternion),
                typeof(Color),
                typeof(Ray),
                typeof(Bounds),
                typeof(Ray2D),
                typeof(Time),
                typeof(GameObject),
                typeof(Component),
                typeof(Behaviour),
                typeof(Transform),
                typeof(Resources),
                typeof(TextAsset),
                typeof(Sprite),
                typeof(Keyframe),
                typeof(AnimationCurve),
                typeof(AnimationClip),
                typeof(MonoBehaviour),
                typeof(ParticleSystem),
                typeof(SkinnedMeshRenderer),
                typeof(Renderer),
                typeof(WWW),
                typeof(MsgContainer.GlobalData),
                typeof(System.Collections.Generic.List<int>),
                typeof(Action<string>),
                typeof(UnityEngine.Debug),
            //    typeof(UnityEngine.Input),
                typeof(UnityEngine.KeyCode),
                typeof(System.EventArgs),
                typeof(System.IO.MemoryStream),
                typeof(CsCoroutine),
                //Self 
                //Core==================
                typeof(ResourceManager),
                typeof(PlayerInfo),
                typeof(EventTriggerListener),
                typeof(HaoyunFramework.UIType),
                typeof(SDKManager),
                typeof(Social),
                typeof(XPlayerPrefs),
                typeof(PlayerPrefs),
                typeof(DownLoadManager),
                typeof(GameManager),
                typeof(PlayingGameInfo),
                typeof(RoomInfo),
                typeof(SelfCardsManager),
                typeof(BaseModule),
                typeof(HomeModule),
                typeof(LoadingModule),
                typeof(LoginModule),
                typeof(PlayingModule),

                typeof(AudioManager),
                typeof(EmailManager),
                typeof(JsonManager),
                typeof(RecordManager),
                typeof(TweenManager),
                typeof(DNotificationCenterManager.NotificationCenter),
                typeof(Game),
                typeof(ESelectType),
                //插件
                typeof(UniWebViewHelper),
                typeof(UniWebViewEdgeInsets),
                typeof(DG.Tweening.DOTween),
                //View
                typeof(UITaskView),
                typeof(UIHomeViewTaskBtn),
                //Args and Server
                typeof(ZhiWa.ControlFlag),
                typeof(ZhiWa.MsgAction),
                typeof(ZhiWa.MsgActionLog),
                typeof(ZhiWa.MsgActionType),
                typeof(ZhiWa.MsgCardGroup),
                typeof(ZhiWa.MsgCardTip),
                typeof(ZhiWa.MsgChangeSeatInfo),
                typeof(ZhiWa.MsgDisRoomInfo),
                typeof(ZhiWa.MsgEmoticon),
                typeof(ZhiWa.MsgErrors),
                typeof(ZhiWa.MsgFightingCardLog),
                typeof(ZhiWa.MsgGameError),
                typeof(ZhiWa.MsgGameInfo),
                typeof(ZhiWa.MsgGameoverCard),
                typeof(ZhiWa.MsgGameOverInfo),
                typeof(ZhiWa.MsgGdEnding),
                typeof(ZhiWa.MsgGuandanDissRoomType),
                typeof(ZhiWa.MsgGuandanGameGoal),
                typeof(ZhiWa.MsgGuandanGameRank),
                typeof(ZhiWa.MsgGuandanRoom),
                typeof(ZhiWa.MsgHorseInfo),
                typeof(ZhiWa.MsgIpConfirm),
                typeof(ZhiWa.MsgLast3Card),
                typeof(ZhiWa.MsgPlayerCleanInfo),
                typeof(ZhiWa.MsgPlayerInfo),
                typeof(ZhiWa.MsgProps),
                typeof(ZhiWa.MsgPropsInfo),
                typeof(ZhiWa.MsgRecord),
                typeof(ZhiWa.MsgRoomInfo),
                typeof(ZhiWa.MsgSameIpPlayer),
                typeof(ZhiWa.MsgSendCardInfo),
                typeof(ZhiWa.MsgTalk),
                typeof(ZhiWa.MsgTotalScore),
                typeof(ZhiWa.MsgTributeInfo),
                typeof(ZhiWa.TGuanDanCardUseType),
                typeof(ZhiWa.TGuanDanCT),
                typeof(ZhiWa.TGuanDanGameNum),
                typeof(ZhiWa.TGuanDanGameType),

                typeof(MsgContainer.ArgsCard),
                typeof(MsgContainer.GlobalData),
                typeof(MsgContainer.ArgsTest),
                typeof(MsgContainer.ArgsMsgRoomInfo),
                typeof(MsgContainer.ArgsChangeSeatInfo),
                typeof(MsgContainer.ArgsCanputOutCard),
                typeof(MsgContainer.ArgsDatingNotic),
                typeof(MsgContainer.ArgsCardStatus),
                typeof(MsgContainer.ArgsMsgGameOverMsg),
                typeof(MsgContainer.ArgsSameIpPlayer),
                typeof(MsgContainer.ArgsIpConfirmPlayer),
                typeof(MsgContainer.ArgsTribute),
                typeof(MsgContainer.ArgsMsgTotalScore),
                typeof(MsgContainer.ArgsWeChat),
                typeof(MsgContainer.ArgsPlayerPut),
                typeof(MsgContainer.ArgsRefreshData),
                typeof(MsgContainer.ArgsPropsInfo),
                typeof(MsgContainer.ArgsEmoticonInfo),
                typeof(MsgContainer.ServerUrlTitle),
                typeof(LoadResourcesHelper),
                typeof(HaoyunFramework.BaseContext),
                typeof(HaoyunFramework.BasesView),
                typeof(MsgContainer.ArgsPlayBackRoomInfo),
                typeof(RecordData),
                //typeof(HaoyunFramework.)
};

    //C#静态调用Lua的配置（包括事件的原型），仅可以配delegate，interface
    [CSharpCallLua]
    public static List<Type> CSharpCallLua = new List<Type>() {
                typeof(Action),
                typeof(Action<LuaTable>),
                typeof(Func<object,object>),
                typeof(Func<object,object,object>),
                typeof(Func<uint ,string>),
                typeof(Func<double, double, double>),
                typeof(Action<string>),
                typeof(Action<uint>),
                typeof(Action<int>),
                typeof(Action<float>),
                typeof(Action<double>),
                typeof(Action<WWW>),
                typeof(HandleFinishDownload),
                typeof(OnTouchButtonHandler),
                typeof(DataChangedHandler),
                typeof(HandleFinishDownload),
                typeof(Action<GameObject>),
                typeof(UnityEngine.Events.UnityAction),
                typeof(System.Collections.IEnumerator),
                typeof(DNotificationCenterManager.NotificationDelegate),
                typeof(DeleGetArrayFormLua<string>),
                typeof(DeleGetArrayFormLua<MsgContainer.ArgsDatingNotic>),
                typeof(UniWebView.ReceivedMessageDelegate),
                typeof(Net.MsgServerHandler),
                typeof(UniWebView.ReceivedMessageDelegate),
                typeof(UniWebView.LoadCompleteDelegate),
                typeof(Action<LuaTable,bool>),
                typeof(ILuaGlobalData),

};

    //黑名单
    [BlackList]
    public static List<List<string>> BlackList = new List<List<string>>()  {
                new List<string>(){"UnityEngine.WWW", "movie"},
    #if UNITY_WEBGL
                new List<string>(){"UnityEngine.WWW", "threadPriority"},
    #endif
                new List<string>(){"UnityEngine.Texture2D", "alphaIsTransparency"},
                new List<string>(){"UnityEngine.Security", "GetChainOfTrustValue"},
                new List<string>(){"UnityEngine.CanvasRenderer", "onRequestRebuild"},
                new List<string>(){"UnityEngine.Light", "areaSize"},
                new List<string>(){"UnityEngine.AnimatorOverrideController", "PerformOverrideClipListCleanup"},
    #if !UNITY_WEBPLAYER
                new List<string>(){"UnityEngine.Application", "ExternalEval"},
    #endif
                new List<string>(){"UnityEngine.GameObject", "networkView"}, //4.6.2 not support
                new List<string>(){"UnityEngine.Component", "networkView"},  //4.6.2 not support
                new List<string>(){"System.IO.FileInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
                new List<string>(){"System.IO.FileInfo", "SetAccessControl", "System.Security.AccessControl.FileSecurity"},
                new List<string>(){"System.IO.DirectoryInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
                new List<string>(){"System.IO.DirectoryInfo", "SetAccessControl", "System.Security.AccessControl.DirectorySecurity"},
                new List<string>(){"System.IO.DirectoryInfo", "CreateSubdirectory", "System.String", "System.Security.AccessControl.DirectorySecurity"},
                new List<string>(){"System.IO.DirectoryInfo", "Create", "System.Security.AccessControl.DirectorySecurity"},
                new List<string>(){"UnityEngine.MonoBehaviour", "runInEditMode"},
            };
}
